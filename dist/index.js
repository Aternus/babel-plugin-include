"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;const fs=require("fs");const path=require("path");const parser=require("@babel/parser");function _default({types:t}){return{visitor:{CallExpression(p,state){const name=p.node.callee.name;const args=p.node.arguments;if(name==="include"){t.assertStringLiteral(args[0]);const pathOfTheInvokingFile=this.file.parserOpts.sourceFileName||this.file.parserOpts.filename;if(pathOfTheInvokingFile===undefined){throw new Error("The include function could not determine the path "+"of the invoking file.")}const root=state.opts.root||path.dirname(pathOfTheInvokingFile);const encoding=state.opts.encoding||"utf8";const fileRelPath=args[0].value;const filePath=path.join(root,fileRelPath);let fileSrc=fs.readFileSync(filePath,{encoding});if(fileSrc instanceof Buffer){fileSrc=fileSrc.toString(encoding)}let ast=parser.parse(fileSrc);ast=ast.program.body;p.replaceWithMultiple(ast)}}}}}